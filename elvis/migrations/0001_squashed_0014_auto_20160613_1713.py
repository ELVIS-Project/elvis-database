# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-06-13 17:16
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import elvis.models.attachment
import uuid



def gen_uuid(apps, schema_editor):
    MyModel = apps.get_model('elvis', 'Attachment')
    for row in MyModel.objects.all():
        row.uuid = uuid.uuid4()
        row.save()
    MyModel = apps.get_model('elvis', 'Collection')
    for row in MyModel.objects.all():
        row.uuid = uuid.uuid4()
        row.save()
    MyModel = apps.get_model('elvis', 'Composer')
    for row in MyModel.objects.all():
        row.uuid = uuid.uuid4()
        row.save()
    MyModel = apps.get_model('elvis', 'Genre')
    for row in MyModel.objects.all():
        row.uuid = uuid.uuid4()
        row.save()
    MyModel = apps.get_model('elvis', 'InstrumentVoice')
    for row in MyModel.objects.all():
        row.uuid = uuid.uuid4()
        row.save()
    MyModel = apps.get_model('elvis', 'Language')
    for row in MyModel.objects.all():
        row.uuid = uuid.uuid4()
        row.save()
    MyModel = apps.get_model('elvis', 'Location')
    for row in MyModel.objects.all():
        row.uuid = uuid.uuid4()
        row.save()
    MyModel = apps.get_model('elvis', 'Movement')
    for row in MyModel.objects.all():
        row.uuid = uuid.uuid4()
        row.save()
    MyModel = apps.get_model('elvis', 'Piece')
    for row in MyModel.objects.all():
        row.uuid = uuid.uuid4()
        row.save()
    MyModel = apps.get_model('elvis', 'Source')
    for row in MyModel.objects.all():
        row.uuid = uuid.uuid4()
        row.save()
    MyModel = apps.get_model('elvis', 'Tag')
    for row in MyModel.objects.all():
        row.uuid = uuid.uuid4()
        row.save()


class Migration(migrations.Migration):

    replaces = [('elvis', '0001_initial'), ('elvis', '0002_auto_20150828_2121'), ('elvis', '0003_auto_20150828_2127'), ('elvis', '0004_auto_20150901_1719'), ('elvis', '0005_auto_20150901_1834'), ('elvis', '0006_auto_20151227_2018'), ('elvis', '0007_auto_20151228_2051'), ('elvis', '0008_auto_20151228_2052'), ('elvis', '0009_auto_20151228_2053'), ('elvis', '0010_auto_20160205_1850'), ('elvis', '0011_movement_parent_cart_id'), ('elvis', '0012_collection_moderators'), ('elvis', '0013_auto_20160212_2120'), ('elvis', '0014_auto_20160613_1713')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('attachment', models.FileField(blank=True, max_length=512, null=True, upload_to=elvis.models.attachment.upload_path)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('uploader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.NullBooleanField()),
                ('old_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['title'],
                'verbose_name_plural': 'collections',
            },
        ),
        migrations.CreateModel(
            name='Composer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('old_birth_date', models.DateField(blank=True, null=True)),
                ('old_death_date', models.DateField(blank=True, null=True)),
                ('birth_date', models.IntegerField(blank=True, null=True)),
                ('death_date', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('attachments', models.ManyToManyField(blank=True, related_name='downloads', to='elvis.Attachment')),
                ('collection_collections', models.ManyToManyField(blank=True, related_name='user_downloads', to='elvis.Collection')),
                ('collection_composers', models.ManyToManyField(blank=True, related_name='user_downloads', to='elvis.Composer')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InstrumentVoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Movement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('old_date_of_composition', models.DateField(blank=True, null=True)),
                ('old_date_of_composition2', models.DateField(blank=True, null=True)),
                ('composition_start_date', models.IntegerField(blank=True, null=True)),
                ('composition_end_date', models.IntegerField(blank=True, null=True)),
                ('number_of_voices', models.IntegerField(blank=True, null=True)),
                ('religiosity', models.CharField(default='Unknown', max_length=50)),
                ('vocalization', models.CharField(default='Unknown', max_length=50)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('attachments', models.ManyToManyField(blank=True, related_name='movements', to='elvis.Attachment')),
                ('collections', models.ManyToManyField(blank=True, related_name='movements', to='elvis.Collection')),
                ('composer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='elvis.Composer')),
                ('genres', models.ManyToManyField(blank=True, related_name='movements', to='elvis.Genre')),
                ('instruments_voices', models.ManyToManyField(blank=True, related_name='movements', to='elvis.InstrumentVoice')),
                ('languages', models.ManyToManyField(blank=True, related_name='movements', to='elvis.Language')),
                ('locations', models.ManyToManyField(blank=True, related_name='movements', to='elvis.Location')),
            ],
            options={
                'ordering': ['position', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('old_date_of_composition', models.DateField(blank=True, null=True)),
                ('old_date_of_composition2', models.DateField(blank=True, null=True)),
                ('composition_start_date', models.IntegerField(blank=True, null=True)),
                ('composition_end_date', models.IntegerField(blank=True, null=True)),
                ('number_of_voices', models.IntegerField(blank=True, null=True)),
                ('religiosity', models.CharField(default='Unknown', max_length=50)),
                ('vocalization', models.CharField(default='Unknown', max_length=50)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('attachments', models.ManyToManyField(blank=True, related_name='pieces', to='elvis.Attachment')),
                ('collections', models.ManyToManyField(blank=True, related_name='pieces', to='elvis.Collection')),
                ('composer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to='elvis.Composer')),
                ('genres', models.ManyToManyField(blank=True, related_name='pieces', to='elvis.Genre')),
                ('instruments_voices', models.ManyToManyField(blank=True, related_name='pieces', to='elvis.InstrumentVoice')),
                ('languages', models.ManyToManyField(blank=True, related_name='pieces', to='elvis.Language')),
                ('locations', models.ManyToManyField(blank=True, related_name='pieces', to='elvis.Location')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='NOTITLE_ERROR', max_length=255)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='piece',
            name='sources',
            field=models.ManyToManyField(blank=True, related_name='pieces', to='elvis.Source'),
        ),
        migrations.AddField(
            model_name='piece',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='pieces', to='elvis.Tag'),
        ),
        migrations.AddField(
            model_name='movement',
            name='piece',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='elvis.Piece'),
        ),
        migrations.AddField(
            model_name='movement',
            name='sources',
            field=models.ManyToManyField(blank=True, related_name='movements', to='elvis.Source'),
        ),
        migrations.AddField(
            model_name='movement',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='movements', to='elvis.Tag'),
        ),
        migrations.AddField(
            model_name='download',
            name='collection_movements',
            field=models.ManyToManyField(blank=True, related_name='user_downloads', to='elvis.Movement'),
        ),
        migrations.AddField(
            model_name='download',
            name='collection_pieces',
            field=models.ManyToManyField(blank=True, related_name='user_downloads', to='elvis.Piece'),
        ),
        migrations.AddField(
            model_name='download',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('elvis.location',),
        ),
        migrations.AlterModelOptions(
            name='composer',
            options={'ordering': ['title']},
        ),
        migrations.AlterModelOptions(
            name='genre',
            options={'ordering': ['title']},
        ),
        migrations.AlterModelOptions(
            name='instrumentvoice',
            options={'ordering': ['title']},
        ),
        migrations.AlterModelOptions(
            name='language',
            options={'ordering': ['title']},
        ),
        migrations.AlterModelOptions(
            name='location',
            options={'ordering': ['title']},
        ),
        migrations.AlterModelOptions(
            name='source',
            options={'ordering': ['title']},
        ),
        migrations.RenameField(
            model_name='composer',
            old_name='name',
            new_name='title',
        ),
        migrations.RenameField(
            model_name='genre',
            old_name='name',
            new_name='title',
        ),
        migrations.RenameField(
            model_name='instrumentvoice',
            old_name='name',
            new_name='title',
        ),
        migrations.RenameField(
            model_name='language',
            old_name='name',
            new_name='title',
        ),
        migrations.RenameField(
            model_name='location',
            old_name='name',
            new_name='title',
        ),
        migrations.RenameField(
            model_name='source',
            old_name='name',
            new_name='title',
        ),
        migrations.RemoveField(
            model_name='collection',
            name='old_id',
        ),
        migrations.RemoveField(
            model_name='composer',
            name='old_birth_date',
        ),
        migrations.RemoveField(
            model_name='composer',
            name='old_death_date',
        ),
        migrations.RemoveField(
            model_name='composer',
            name='old_id',
        ),
        migrations.RemoveField(
            model_name='movement',
            name='old_date_of_composition',
        ),
        migrations.RemoveField(
            model_name='movement',
            name='old_date_of_composition2',
        ),
        migrations.RemoveField(
            model_name='movement',
            name='old_id',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='old_date_of_composition',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='old_date_of_composition2',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='old_id',
        ),
        migrations.AddField(
            model_name='composer',
            name='comment',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='composer',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='genre',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='instrumentvoice',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='language',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='location',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='movement',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='piece',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='source',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='collection',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='collection',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='collection',
            name='title',
            field=models.CharField(default='NOTITLE_ERROR', max_length=255),
        ),
        migrations.AlterField(
            model_name='collection',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='composer',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='composer',
            name='title',
            field=models.CharField(default='NOTITLE_ERROR', max_length=255),
        ),
        migrations.AlterField(
            model_name='composer',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='genre',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='genre',
            name='title',
            field=models.CharField(default='NOTITLE_ERROR', max_length=255),
        ),
        migrations.AlterField(
            model_name='genre',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='instrumentvoice',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='instrumentvoice',
            name='title',
            field=models.CharField(default='NOTITLE_ERROR', max_length=255),
        ),
        migrations.AlterField(
            model_name='instrumentvoice',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='language',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='language',
            name='title',
            field=models.CharField(default='NOTITLE_ERROR', max_length=255),
        ),
        migrations.AlterField(
            model_name='language',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='location',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='location',
            name='title',
            field=models.CharField(default='NOTITLE_ERROR', max_length=255),
        ),
        migrations.AlterField(
            model_name='location',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='movement',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='movement',
            name='title',
            field=models.CharField(default='NOTITLE_ERROR', max_length=255),
        ),
        migrations.AlterField(
            model_name='movement',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='piece',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='piece',
            name='title',
            field=models.CharField(default='NOTITLE_ERROR', max_length=255),
        ),
        migrations.AlterField(
            model_name='piece',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='source',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='source',
            name='title',
            field=models.CharField(default='NOTITLE_ERROR', max_length=255),
        ),
        migrations.AlterField(
            model_name='source',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.RemoveField(
            model_name='attachment',
            name='description',
        ),
        migrations.RemoveField(
            model_name='attachment',
            name='old_id',
        ),
        migrations.AddField(
            model_name='attachment',
            name='comment',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='attachment',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attachment',
            name='title',
            field=models.CharField(default='NOTITLE_ERROR', max_length=255),
        ),
        migrations.AlterField(
            model_name='attachment',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='attachment',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.RemoveField(
            model_name='attachment',
            name='uploader',
        ),
        migrations.AddField(
            model_name='attachment',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name='collection',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name='composer',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name='genre',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name='instrumentvoice',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name='language',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name='location',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name='movement',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name='piece',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.AddField(
            model_name='source',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, null=True),
        ),
        migrations.RunPython(
            code=gen_uuid,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AlterField(
            model_name='attachment',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='collection',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='composer',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='genre',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='instrumentvoice',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='language',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='location',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='movement',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='piece',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='source',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='tag',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='attachment',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='collection',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='composer',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='genre',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='instrumentvoice',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='language',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='location',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='movement',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='piece',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='source',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AlterField(
            model_name='tag',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AddField(
            model_name='movement',
            name='parent_cart_id',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='collection',
            name='curators',
            field=models.ManyToManyField(blank=True, related_name='curates', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='movement',
            name='hidden',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='piece',
            name='hidden',
            field=models.BooleanField(default=False),
        ),
    ]

